services:
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=contents_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  web:
    build: .
    command: >
      sh -c "python manage.py makemigrations contents &&
             python manage.py migrate &&
             python manage.py populate_db &&
             python manage.py collectstatic --noinput &&
             python manage.py default_superuser &&
             gunicorn --bind 0.0.0.0:8000 content_rating.wsgi:application"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    environment:
      - DEBUG=0
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_PASSWORD=admin
      - REDIS_URL=redis://redis:6379/1
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1
      - DATABASE_URL=postgres
      - POSTGRES_DB=contents_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/usr/share/nginx/html/static
      - media_volume:/usr/share/nginx/html/media
      - ./certs:/etc/nginx/certs:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

volumes:
  postgres_data:
  static_volume:
  media_volume:
  redis_data:
  certs: